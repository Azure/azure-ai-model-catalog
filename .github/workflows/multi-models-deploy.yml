name: multi-models-deploy

on: 
  workflow_dispatch:
    inputs:
      model_list:
        description: 'List of models to deploy'
        required: true


env:
   test_sku_type: cpu
   test_set: huggingface-all
   test_queue: test-southcentralus

jobs:
  deploy-model-job:
    strategy:
      matrix:
        model: ${{fromJson(inputs.model_list)}}

    runs-on: ubuntu-latest

    steps:
      - name: check-out-repo-step
        uses: actions/checkout@v3

      - name: azure-login-step
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: pip-install-azure-ai-ml
        run: pip install azure-ai-ml

      - name: pip-install-azureml-core
        run: pip install azureml-core

      - name: pip-install-datasets
        run: pip install datasets

      - name: pip-install-azureml-mlflow
        run: pip install azureml-mlflow==1.53.0

      - name: pip-install-transformers
        run: pip install transformers

      - name: pip-install-transformers[torch]
        run: pip install transformers[torch]

      - name: pip-install-torchvision
        run: pip install torchvision 

      - name: pip-install-mlflow
        run: pip install mlflow

      - name: pip-install-python-box
        run: pip install python-box 

      - name: pip-install-sacremoses
        run: pip install sacremoses

      - name: pip-install-sentencepiece
        run: pip install sentencepiece

      - name: pip-install-fugashi[unidic-lite]
        run: pip install fugashi[unidic-lite] 
      - name: set-model-env-variable
        run: echo "test_model_name=${{ matrix.model }}" >> $GITHUB_ENV

      - name: Set Environment Variables
        run: |
          #echo "test_model_name=your_model_name" >> $GITHUB_ENV
          echo "test_sku_type=cpu" >> $GITHUB_ENV
          echo "test_queue=your_queue_value" >> $GITHUB_ENV
          echo "test_set=your_set_value" >> $GITHUB_ENV
          # echo "test_trigger_next_model=true" >> $GITHUB_ENV
          # echo "test_keep_looping=false" >> $GITHUB_ENV
  



      - name: deploy-model-step
        id: deploy-model-step
        run: python generic_initial_automation_test.py ${{ matrix.model }}
        working-directory: tests/src/automation_for_constant_library

      - name: handle-deploy-model-failure
        if: failure()
        continue-on-error: true
        run: echo "Deployment failed for ${{ matrix.model }}"

      - name: trigger-next-model-step
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        if: ${{ env.test_trigger_next_model == 'true' && steps.deploy-model-step.outputs.NEXT_MODEL != '' && (success() || failure())}}
        run: gh workflow run ${{ steps.deploy-model-step.outputs.NEXT_MODEL }} --ref ${{ github.ref_name }}
