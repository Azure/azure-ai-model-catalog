name: multi-models-deploy-parallel

on:
  workflow_dispatch:
    inputs:
      model_list_set1:
        description: 'List of models to deploy (Set 1)'
        required: true
      model_list_set2:
        description: 'List of models to deploy (Set 2)'
      model_list_set3:
        description: 'List of models to deploy (Set 3)'
        required: true
      # Add more sets as needed

env:
  test_sku_type: cpu
  test_set: huggingface-all
  test_queue: test-japaneast

jobs:
  deploy-model-job:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        model_set:
          - set1
          - set2
          - set3
          # Add more sets as needed

    steps:
      - name: Check out repo step
        uses: actions/checkout@v3

      - name: Azure login step
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Pip install azure-ai-ml step
        run: pip install azure-ai-ml

      - name: Pip install azureml-core step
        run: pip install azureml-core

      - name: Pip install datasets step
        run: pip install datasets

      - name: Pip install azureml-mlflow step
        run: pip install azureml-mlflow==1.53.0

      - name: Pip install transformers step
        run: pip install transformers

      - name: Pip install transformers[torch] step
        run: pip install transformers[torch]

      - name: Pip install torchvision step
        run: pip install torchvision

      - name: Pip install mlflow step
        run: pip install mlflow

      - name: Pip install python-box step
        run: pip install python-box

      - name: Pip install sacremoses step
        run: pip install sacremoses

      - name: Pip install sentencepiece step
        run: pip install sentencepiece

      - name: Pip install fugashi[unidic-lite] step
        run: pip install fugashi[unidic-lite]

      - name: Set Environment Variables
        run: |
          echo "test_model_name=${{ matrix.model_set }}" >> $GITHUB_ENV

      - name: Deploy Models in Parallel
        run: |
          case ${{ matrix.model_set }} in
            set1)
              models="${{fromJson(inputs.model_list_set1)}}"
            ;;
            set2)
              models="${{fromJson(inputs.model_list_set2)}}"
            ;;
            set3)
              models="${{fromJson(inputs.model_list_set3)}}"
            ;;
            # Add more sets as needed
          esac

          deploy_model() {
            local model="$1"
            echo "Deploying $model..."
            cd tests/src/automation_for_constant_library
            python generic_initial_automation_test.py $model || true
            cd $GITHUB_WORKSPACE
          }

          IFS=$'\n'
          for model in $models; do
            deploy_model "$model" &
          done
          wait
          continue-on-error: true
